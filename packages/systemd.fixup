#!/bin/bash

DEBOOT="$1"
ARCH="$2"


# the initrd looks for a different file to start as init than
# a normal bootup.  # so, we need to specifically create a link
# for it.
# TODO - when we use a script as /init remove this
ln -fs /lib/systemd/systemd $DEBOOT/init

# manually install the network unit to run on startup
mkdir -p ${DEBOOT}/etc/systemd/system/multi-user.target.wants
ln -sf /lib/systemd/system/systemd-networkd.service ${DEBOOT}/etc/systemd/system/multi-user.target.wants
ln -sf /lib/systemd/system/systemd-networkd.socket ${DEBOOT}/etc/systemd/system/multi-user.target.wants

# install IP configuration config
cat <<EOF >${DEBOOT}/etc/systemd/network/95-rescue.network
# ensure that all network devices are captured by systemd-networkd
[Network]
DHCP=yes
IPv4LLRoute=yes
LLMNR=true
MulticastDNS=true
LLDP=true
EmitLLDP=true

EOF

# install link configuration config
cat <<EOF >${DEBOOT}/etc/systemd/network/95-rescue.link
# just use the simple old kernel names for all interfaces
[Link]
NamePolicy=kernel database
MACAddressPolicy=persistent
EOF

# manually install the resolver unit to run on startup
mkdir -p ${DEBOOT}/etc/systemd/system/multi-user.target.wants
ln -sf /lib/systemd/system/systemd-resolved.service ${DEBOOT}/etc/systemd/system/multi-user.target.wants

# point our default resolver at systemd-resolved
cat <<EOF >${DEBOOT}/etc/resolv.conf
nameserver 127.0.0.53
EOF

