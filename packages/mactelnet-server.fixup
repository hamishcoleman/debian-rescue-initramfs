#!/bin/bash

DEBOOT="$1"
ARCH="$2"


# TODO
# - figure out where to put common fragments like this
wants() {
    local WANTS="$1"
    local THIS="$2"

    local WANTSDIR="${DEBOOT}/etc/systemd/system/${WANTS}.wants"
    mkdir -p "${WANTSDIR}"
    ln -sf "${THIS}" "${WANTSDIR}"
}


# install this unit to run on startup
wants multi-user.target /etc/systemd/system/mactelnet-server.service

# the mactelenetd will exit if it finds no up interfaces with ip addreses,
# which is often the case in the rescue environment, so we take steps to
# ensure that the service is constantly restarted until it is working.
cat <<EOF >${DEBOOT}/etc/systemd/system/mactelnet-server.service
[Unit]
Description=LSB: Telnet daemon for Mikrotik Mac-Telnet protocol
Conflicts=shutdown.target

[Install]
WantedBy=multi-user.target

[Service]
Type=forking
Restart=always
RestartSec=10
TimeoutSec=20
IgnoreSIGPIPE=no
KillMode=process
RemainAfterExit=no
ExecStart=/etc/init.d/mactelnet-server start
ExecStop=/etc/init.d/mactelnet-server stop
EOF

# the initscript ends up running two copies of the daemon
perl -pi -e 's/start-stop-daemon .* --test/true /' ${DEBOOT}/etc/init.d/mactelnet-server

