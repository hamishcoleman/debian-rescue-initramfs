#!/bin/bash
#
# Check the debian root dir and try to run the script for each installed
# package.
#

if [ $# -lt 3 ]; then
    echo "Usage: $0 DEBOOT ARCH STAGE"
    exit 1
fi

DEBOOT="$1"
ARCH="$2"
STAGE="$3"
VERBOSE="$4"

PACKAGEDIR=packages
PACKAGES=$(dpkg-query --admindir="${DEBOOT}/var/lib/dpkg" --show --showformat='${Package}\n')

unset NO_SCRIPT
unset NO_SUPPORT

unset DO_SCRIPT

do_package() {
    local package=$1

    if [ ! -x "$PACKAGEDIR/$package.${STAGE}" ]; then
        NO_SCRIPT+="$package "
        return
    fi

    if [ -n "$VERBOSE" ]; then
        echo -n "$package "
    fi
    "$PACKAGEDIR/$package.${STAGE}" "${DEBOOT}" "${ARCH}"
    S=$?

    if [ $S -eq 1 ]; then
        NO_SUPPORT+="$package "
        return 1
    fi
    if [ $S -gt 1 ]; then
        echo "Error: package script $package failed"
        exit $S
    fi

    DO_SCRIPT+="${package} "
}

echo "Running package scripts for $STAGE phase"
if [ -n "$VERBOSE" ]; then
    echo 
    echo "Processing:"
    echo -e -n "\t"
fi

for package in $PACKAGES; do
    do_package "$package"
    S=$?
    if [ $S -gt 1 ]; then
        exit $S
    fi
done

if [ -n "$VERBOSE" ]; then
    echo
    echo
fi

NR_PACKAGES=$(echo "$PACKAGES" |wc -w)

echo "Packages with all-in-one script: $(echo "$DO_SCRIPT" |wc -w)/$NR_PACKAGES"
if [ -n "$VERBOSE" ]; then
    echo "Missing script:"
    echo -e "\t$NO_SCRIPT"
    echo
fi

echo "Scripts with no support for ${STAGE}: $(echo "$NO_SUPPORT" |wc -w)/$NR_PACKAGES"
if [ -n "$VERBOSE" ]; then
    echo "Missing support:"
    echo -e "\t$NO_SUPPORT"
    echo
fi


