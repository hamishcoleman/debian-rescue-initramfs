#!/bin/bash
#
# Check the debian root dir and try to run the script for each installed
# package.
#

if [ $# -lt 3 ]; then
    echo Usage: $0 DEBOOT ARCH STAGE
    exit 1
fi

DEBOOT="$1"
ARCH="$2"
STAGE="$3"
VERBOSE="$4"

PACKAGEDIR=packages
PACKAGES=`dpkg-query --admindir=${DEBOOT}/var/lib/dpkg --show --showformat='${Package}\n'`

unset NO_FILES
unset NO_SCRIPT
unset NO_SUPPORT
unset OK

do_files_list() {
    local package=$1

    if [ "${STAGE}" != "minimise" ]; then
        return
    fi

    if [ ! -e "$PACKAGEDIR/${package}.files" ]; then
        NO_FILES+="${package} "
        return
    fi

    cat "$PACKAGEDIR/${package}.files" | while read action file; do
        case "$action" in
        '') true
            # skip blank lines
            ;;
        '#') true
            # skip comment lines
            ;;
        k)  eval file="$file"
            if [ ! -e "${DEBOOT}/$file" ]; then
                echo Package $package is missing file $file
                exit 2
            fi
            ;;
        r)  eval rm -f "${DEBOOT}/$file"
            ;;
        rr) eval rm -rf "${DEBOOT}/$file"
            ;;
        *)  echo Unknown action $action in files list for $package
            exit 2
            ;;
        esac
    done

}

do_package() {
    local package=$1

    do_files_list $package
    S=$?
    if [ $S -gt 1 ]; then
        exit $S
    fi

    if [ ! -x $PACKAGEDIR/$package ]; then
        NO_SCRIPT+="$package "
        return
    fi

    if [ -n "$VERBOSE" ]; then
        echo -n "$package "
    fi
    $PACKAGEDIR/$package ${DEBOOT} ${ARCH} ${STAGE}
    S=$?

    if [ $S -eq 1 ]; then
        NO_SUPPORT+="$package "
        return 1
    fi
    if [ $S -gt 1 ]; then
        echo "Error: package script $package failed"
        exit $S
    fi

    OK+="$package "
}

echo "Running package scripts for $STAGE phase"
if [ -n "$VERBOSE" ]; then
    echo 
    echo "Packages:"
    echo -e -n "\t"
fi

for package in $PACKAGES; do
    do_package $package
    S=$?
    if [ $S -gt 1 ]; then
        exit $S
    fi
done

if [ -n "$VERBOSE" ]; then
    echo
    echo
fi

echo "No files: `echo $NO_FILES |wc -w`"
if [ -n "$VERBOSE" ]; then
    echo -e "\t$NO_FILES"
    echo
fi

echo "No script: `echo $NO_SCRIPT |wc -w`"
if [ -n "$VERBOSE" ]; then
    echo -e "\t$NO_SCRIPT"
    echo
fi

echo "No support: `echo $NO_SUPPORT |wc -w`"
if [ -n "$VERBOSE" ]; then
    echo -e "\t$NO_SUPPORT"
    echo
fi

echo "Ran OK: `echo $OK |wc -w`"
if [ -n "$VERBOSE" ]; then
    echo
fi


