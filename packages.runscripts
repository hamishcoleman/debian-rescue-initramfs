#!/bin/bash
#
# Check the newly installed debian root dir and run any packages.d script
# found for each package.
#
# Copyright (C) 2018 Hamish Coleman <hamish@zot.org>

if [ $# -lt 3 ]; then
    echo "Usage: $0 DEBOOT ARCH STAGE"
    exit 1
fi

DEBOOT="$1"
ARCH="$2"
STAGE="$3"

if [ "$4" = "verbose" ]; then
    VERBOSE=1
else
    unset VERBOSE
fi

# If a configs search path has been specified, construct a package.d
# path list from it
for dir in $CONFIGDIRS; do
    try="$dir/packages.d"
    if [ -d "$try" ]; then
        PACKAGEDIRS+=" $try"
    fi
done
unset try

# Default to just looking in the current dir
: ${PACKAGEDIRS=packages.d}

if [ -n "$VERBOSE" ]; then
    echo "Info: Using search path of: $PACKAGEDIRS"
fi

PACKAGES=$(dpkg-query --admindir="${DEBOOT}/var/lib/dpkg" --show --showformat='${Package}\n')

# Add an always present virtual package
PACKAGES+=" _ALWAYS"

do_package() {
    local package=$1
    local retval=0

    for dir in $PACKAGEDIRS; do
        if [ ! -x "$dir/$package.${STAGE}" ]; then
            continue
        fi

        if [ -n "$VERBOSE" ]; then
            echo -n "$dir/$package "
        fi
        "$dir/$package.${STAGE}" "${DEBOOT}" "${ARCH}"
        S=$?

        if [ $S -eq 1 ]; then
            retval=1
        fi
        if [ $S -gt 1 ]; then
            echo "Error: package script from $dir for $package failed"
            exit $S
        fi
    done

    return $retval
}

echo "Running package scripts for $STAGE phase"
if [ -n "$VERBOSE" ]; then
    echo 
    echo "Processing:"
    echo -e -n "\t"
fi

for package in $PACKAGES; do
    do_package "$package"
    S=$?
    if [ $S -gt 1 ]; then
        exit $S
    fi
done

if [ -n "$VERBOSE" ]; then
    echo
fi

